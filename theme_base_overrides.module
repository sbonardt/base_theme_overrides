<?php
/**
 * Return a themed breadcrumb trail. Simple and conscise, links in a div
 */
function theme_base_overrides_breadcrumb(&$variables) {
    $breadcrumb = $variables['breadcrumb'];
    if (!empty($breadcrumb)) {
        $output = '<div class="breadcrumb">' . implode('', $breadcrumb) . '</div>';
        return $output;
    }
}

/**
 * Override or insert variables into the page template.
 */
function theme_base_overrides_preprocess_page(&$variables) {
// page template suggestions base on node type: page--type--interview, page--type--cursus, etc.
    if (!empty($variables['node'])) {
        $variables['theme_hook_suggestions'][] = 'page__type__' . $variables['node']->type;
    }

// move secondary tabs into a separate variable.
    $variables['tabs2'] = array(
        '#theme' => 'menu_local_tasks',
        '#secondary' => $variables['tabs']['#secondary'],
        );
    unset($variables['tabs']['#secondary']);

// template suggestions to target specific taxonomy voc. pages based on voc.id page--vocabulary--id
    if (arg(0) == 'taxonomy' && arg(1) == 'term' && is_numeric(arg(2))) {
        $tid = arg(2);
        $vid = db_query("SELECT vid FROM {taxonomy_term_data} WHERE tid = :tid", array(':tid' => $tid))->fetchField();
        $variables['theme_hook_suggestions'][] = 'page__vocabulary__' . $vid;
    }   

// put the search block form in a separate variable '$searchblock' for use in page.tpl
    $customsearchblock = module_invoke('search','block_view','search'); 
    $customsearchrendered_block = render($customsearchblock);
    $variables['searchblock'] = $customsearchrendered_block;
}

/**
 * Override or insert variables into the node template.
 */
function theme_base_overrides_preprocess_node(&$variables) {
// add node-full class to node
    if ($variables['elements']['#view_mode'] == 'full') {
        $variables['classes_array'][] = 'node-full';
    }
// add node-teaser class to node if teaser
    if ($variables['elements']['#view_mode'] == 'teaser') {
        $variables['classes_array'][] = 'node-teaser';
    }
}

/**
 * Override or insert variables into the block template.
 */
function theme_base_overrides_preprocess_block(&$variables) {
    $block = $variables['block'];
// add a simple edit link to blocks for priviliged users
    if (user_access('administer blocks') && $block->module == "block"){
        $variables['content'] = l(t('edit'), 'admin/structure/block/manage/block/' . $block->delta, array('attributes'=>array('class'=>'block_edit', 'title'=>'edit '.$block->subject.' block'), 'query'=>drupal_get_destination())). $variables['content'];
    }
}